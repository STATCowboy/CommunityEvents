{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": ""
        },
        "traininglake01noneKV_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'traininglake01noneKV'"
        },
        "AnyDatabaseConnection_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "@linkedService().DBConnectionSecret"
        },
        "LaptopFiles_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "C:\\ADFRoot\\"
        },
        "LaptopFiles_properties_typeProperties_userId": {
            "type": "string",
            "defaultValue": ""
        },
        "TrainingKeys01_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": ""
        },
        "trainingdb01_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": ""
        },
        "traininglake01_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": ""
        },
        "traininglake01noneKV_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": ""
        },
        "PaulsLaptopIR_properties_typeProperties_linkedInfo_resourceId": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/01 - Upload - Simple')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Upload Person",
                        "description": "hfdhgfdhfd",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "FileServerReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "LaptopFilePersonCSV",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "LakeFilePersonCSV",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "Demo Pipelines/Data Uploads"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/LaptopFilePersonCSV')]",
                "[concat(variables('factoryId'), '/datasets/LakeFilePersonCSV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/02 - Upload - Copy Params')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Upload Any File",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "FileServerReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "LaptopsFiles",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Directory": "ForUpload\\People",
                                    "File": "Person.csv"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "LakeFiles",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Directory": "Landing",
                                    "File": "Person.csv"
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "Demo Pipelines/Data Uploads"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/LaptopsFiles')]",
                "[concat(variables('factoryId'), '/datasets/LakeFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/03 - Upload - From Discovery')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get File List",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "LaptopFolders",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Directory": "ForUpload\\People"
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "FileServerReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Upload Files",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get File List",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get File List').output.childItems",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Upload File",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "FileServerReadSettings",
                                                "recursive": true
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "LaptopsFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Directory": "ForUpload\\People",
                                                "File": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "LakeFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Directory": "Landing",
                                                "File": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "folder": {
                    "name": "Demo Pipelines/Data Uploads"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/LaptopFolders')]",
                "[concat(variables('factoryId'), '/datasets/LaptopsFiles')]",
                "[concat(variables('factoryId'), '/datasets/LakeFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04 - Upload - From Metadata')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get File List",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT * FROM [dbo].[FilesToUpload] WHERE [Enabled] = 1;",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "GetSetMetadata",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "UploadFiles",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get File List",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Log Upload Start",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get File List').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Upload File",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "FilePath",
                                                    "value": "$$FILEPATH"
                                                },
                                                {
                                                    "name": "DataFactoryName",
                                                    "value": {
                                                        "value": "@pipeline().DataFactory",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "PipelineName",
                                                    "value": {
                                                        "value": "@pipeline().Pipeline",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "UploadDateTime",
                                                    "value": {
                                                        "value": "@utcnow()",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "RunId",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "storeSettings": {
                                                "type": "FileServerReadSettings",
                                                "recursive": true
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "LaptopsFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Directory": {
                                                    "value": "@item().SourceDirectory",
                                                    "type": "Expression"
                                                },
                                                "File": {
                                                    "value": "@item().FileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "LakeFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Directory": {
                                                    "value": "@item().TargetDirectory",
                                                    "type": "Expression"
                                                },
                                                "File": {
                                                    "value": "@item().FileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Log Upload Start",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get File List",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[dbo].[LogUploadStart]",
                                "storedProcedureParameters": {
                                    "FileCount": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@activity('Get File List').output.count",
                                            "type": "Expression"
                                        }
                                    },
                                    "TriggerId": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().TriggerId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "GetSetMetadata",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Log Upload Finish",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "UploadFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[LogUploadFinish]",
                            "storedProcedureParameters": {
                                "LogId": {
                                    "value": {
                                        "value": "@activity('Log Upload Start').output.firstRow.LogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "trainingdb01",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "variables": {
                    "DemoVariable": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Demo Pipelines/Data Uploads"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/GetSetMetadata')]",
                "[concat(variables('factoryId'), '/linkedServices/trainingdb01')]",
                "[concat(variables('factoryId'), '/datasets/LaptopsFiles')]",
                "[concat(variables('factoryId'), '/datasets/LakeFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Lazy Replication')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Table List",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@pipeline().parameters.TableLookupQuery",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AnyDatabaseTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "LinkedServiceConnectionSecret": {
                                        "value": "@pipeline().parameters.SourceConnectionSecret",
                                        "type": "Expression"
                                    },
                                    "SchemaName": "sys",
                                    "TableName": "objects"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Copy Tables",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Table List",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Table List').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Copy Table",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "preCopyScript": {
                                                "value": "IF OBJECT_ID('@{item().SchemaName}.@{item().TableName}') IS NOT NULL TRUNCATE TABLE @{item().SchemaName}.@{item().TableName}",
                                                "type": "Expression"
                                            },
                                            "tableOption": "autoCreate",
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "AnyDatabaseTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "LinkedServiceConnectionSecret": {
                                                    "value": "@pipeline().parameters.SourceConnectionSecret",
                                                    "type": "Expression"
                                                },
                                                "SchemaName": {
                                                    "value": "@item().SchemaName",
                                                    "type": "Expression"
                                                },
                                                "TableName": {
                                                    "value": "@item().TableName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "AnyDatabaseTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "LinkedServiceConnectionSecret": {
                                                    "value": "@pipeline().parameters.TargetConnectionSecret",
                                                    "type": "Expression"
                                                },
                                                "SchemaName": {
                                                    "value": "@item().SchemaName",
                                                    "type": "Expression"
                                                },
                                                "TableName": {
                                                    "value": "@item().TableName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "SourceConnectionSecret": {
                        "type": "string",
                        "defaultValue": "ConnectionString-trainingdb01"
                    },
                    "TargetConnectionSecret": {
                        "type": "string",
                        "defaultValue": "ConnectionString-trainingdb02"
                    },
                    "TableLookupQuery": {
                        "type": "string",
                        "defaultValue": "SELECT \ts.name AS SchemaName, \to.name AS TableName FROM  \tsys.objects o \tINNER JOIN sys.schemas s \t\tON o.schema_id = s.schema_id WHERE  \to.[type] = 'U'"
                    }
                },
                "folder": {
                    "name": "Demo Pipelines/Dynamic Linked Services"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AnyDatabaseTable')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Order Summary with Mapping')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Mapping Order Aggregation",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "MappingOrderAggregation",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "OrderHeader": {},
                                    "OrderLineDetails": {},
                                    "OrderSummary": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    }
                ],
                "folder": {
                    "name": "Demo Pipelines/Data Flows"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/MappingOrderAggregation')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Scale Out Level 1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Bucket Ids",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Reset And Log Start",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Reset Bucket Process Map",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[dbo].[GetBuckets]",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "GetSetMetadata",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Call Buckets",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Bucket Ids",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Bucket Ids').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 50,
                            "activities": [
                                {
                                    "name": "Call Level 2",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Scale Out Level 2",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BucketId": {
                                                "value": "@{item().BucketId}",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Log End",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Call Buckets",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Reset And Log Start",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[SetBucketLogEntry]",
                            "storedProcedureParameters": {
                                "LogId": {
                                    "value": {
                                        "value": "@activity('Reset And Log Start').output.firstRow.LogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "trainingdb01",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Reset And Log Start",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[dbo].[SetBucketLogEntry]",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "GetSetMetadata",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Reset Bucket Process Map",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[SetBucketProcesses]"
                        },
                        "linkedServiceName": {
                            "referenceName": "trainingdb01",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "Demo Pipelines/Scaling Out"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/GetSetMetadata')]",
                "[concat(variables('factoryId'), '/linkedServices/trainingdb01')]",
                "[concat(variables('factoryId'), '/pipelines/Scale Out Level 2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Scale Out Level 2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Bucket Contents",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[dbo].[GetBucketContents]",
                                "storedProcedureParameters": {
                                    "BucketId": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.BucketId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "GetSetMetadata",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Processes",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Bucket Contents",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Bucket Contents').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 50,
                            "activities": [
                                {
                                    "name": "Run Process",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@concat('[workers].[DumpDataAndWait',item().ProcessId,']')",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "trainingdb01",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "BucketId": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "Demo Pipelines/Scaling Out"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/GetSetMetadata')]",
                "[concat(variables('factoryId'), '/linkedServices/trainingdb01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AnyDatabaseTable')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AnyDatabaseConnection",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "DBConnectionSecret": {
                            "value": "@dataset().LinkedServiceConnectionSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "LinkedServiceConnectionSecret": {
                        "type": "string"
                    },
                    "SchemaName": {
                        "type": "string"
                    },
                    "TableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().SchemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().TableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AnyDatabaseConnection')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetSetMetadata')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "trainingdb01",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/trainingdb01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LakeFileOrderDetailLinesParquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "traininglake01noneKV",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Lake"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "OrderDetailLines.parquet",
                        "folderPath": "Raw",
                        "fileSystem": "datawarehouse"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "SalesOrderID",
                        "type": "INT32"
                    },
                    {
                        "name": "SalesOrderDetailID",
                        "type": "INT32"
                    },
                    {
                        "name": "OrderQty",
                        "type": "INT32"
                    },
                    {
                        "name": "ProductID",
                        "type": "INT32"
                    },
                    {
                        "name": "UnitPrice",
                        "type": "DECIMAL",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "UnitPriceDiscount",
                        "type": "DECIMAL",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "LineTotal",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 6
                    },
                    {
                        "name": "rowguid",
                        "type": "UTF8"
                    },
                    {
                        "name": "ModifiedDate",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/traininglake01noneKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LakeFileOrderHeaderParquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "traininglake01noneKV",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Lake"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "OrderHeader.parquet",
                        "folderPath": "Raw",
                        "fileSystem": "datawarehouse"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "SalesOrderID",
                        "type": "INT32"
                    },
                    {
                        "name": "RevisionNumber",
                        "type": "INT32"
                    },
                    {
                        "name": "OrderDate",
                        "type": "INT96"
                    },
                    {
                        "name": "DueDate",
                        "type": "INT96"
                    },
                    {
                        "name": "ShipDate",
                        "type": "INT96"
                    },
                    {
                        "name": "Status",
                        "type": "INT32"
                    },
                    {
                        "name": "OnlineOrderFlag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "SalesOrderNumber",
                        "type": "UTF8"
                    },
                    {
                        "name": "PurchaseOrderNumber",
                        "type": "UTF8"
                    },
                    {
                        "name": "AccountNumber",
                        "type": "UTF8"
                    },
                    {
                        "name": "CustomerID",
                        "type": "INT32"
                    },
                    {
                        "name": "ShipToAddressID",
                        "type": "INT32"
                    },
                    {
                        "name": "BillToAddressID",
                        "type": "INT32"
                    },
                    {
                        "name": "ShipMethod",
                        "type": "UTF8"
                    },
                    {
                        "name": "CreditCardApprovalCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "SubTotal",
                        "type": "DECIMAL",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "TaxAmt",
                        "type": "DECIMAL",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "Freight",
                        "type": "DECIMAL",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "TotalDue",
                        "type": "DECIMAL",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "Comment",
                        "type": "UTF8"
                    },
                    {
                        "name": "rowguid",
                        "type": "UTF8"
                    },
                    {
                        "name": "ModifiedDate",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/traininglake01noneKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LakeFileParquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "traininglake01",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Directory": {
                        "type": "string"
                    },
                    "File": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Lake"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().File",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().Directory",
                            "type": "Expression"
                        },
                        "fileSystem": "datawarehouse"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/traininglake01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LakeFilePersonCSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "traininglake01",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Lake"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "Person.csv",
                        "folderPath": "Landing",
                        "fileSystem": "datawarehouse"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/traininglake01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LakeFiles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "traininglake01",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Directory": {
                        "type": "string"
                    },
                    "File": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Lake"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().File",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().Directory",
                            "type": "Expression"
                        },
                        "fileSystem": "datawarehouse"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/traininglake01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LaptopFilePersonCSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LaptopFiles",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Laptop"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "fileName": "Person.csv",
                        "folderPath": "ForUpload/People"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LaptopFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LaptopFolders')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LaptopFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Directory": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Laptop"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "folderPath": {
                            "value": "@dataset().Directory",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LaptopFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LaptopsFiles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LaptopFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Directory": {
                        "type": "string"
                    },
                    "File": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Laptop"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "fileName": {
                            "value": "@dataset().File",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().Directory",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LaptopFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TableOrderSummary')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "trainingdb01",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "SalesOrderNumber",
                        "type": "varchar"
                    },
                    {
                        "name": "RecordCount",
                        "type": "int",
                        "precision": 10
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "OrderSummary"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/trainingdb01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AnyDatabaseConnection')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "DBConnectionSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "TrainingKeys01",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "[parameters('AnyDatabaseConnection_properties_typeProperties_connectionString_secretName')]",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/TrainingKeys01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LaptopFiles')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "FileServer",
                "typeProperties": {
                    "host": "[parameters('LaptopFiles_properties_typeProperties_host')]",
                    "userId": "[parameters('LaptopFiles_properties_typeProperties_userId')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "TrainingKeys01",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "ADFIRUser"
                    }
                },
                "connectVia": {
                    "referenceName": "PaulsLaptopIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/PaulsLaptopIR')]",
                "[concat(variables('factoryId'), '/linkedServices/TrainingKeys01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TrainingKeys01')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('TrainingKeys01_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trainingdb01')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "TrainingKeys01",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('trainingdb01_properties_typeProperties_connectionString_secretName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/TrainingKeys01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/traininglake01')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('traininglake01_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "TrainingKeys01",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "traininglake01"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/TrainingKeys01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/traininglake01noneKV')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('traininglake01noneKV_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('traininglake01noneKV_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ForDataFlowDemos')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "UK South",
                        "dataFlowProperties": {
                            "computeType": "General",
                            "coreCount": 8,
                            "timeToLive": 240
                        }
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/PaulsLaptopIR')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "typeProperties": {
                    "linkedInfo": {
                        "resourceId": "[parameters('PaulsLaptopIR_properties_typeProperties_linkedInfo_resourceId')]",
                        "authorizationType": "Rbac"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/MappingOrderAggregation')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "LakeFileOrderHeaderParquet",
                                "type": "DatasetReference"
                            },
                            "name": "OrderHeader"
                        },
                        {
                            "dataset": {
                                "referenceName": "LakeFileOrderDetailLinesParquet",
                                "type": "DatasetReference"
                            },
                            "name": "OrderLineDetails"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "TableOrderSummary",
                                "type": "DatasetReference"
                            },
                            "name": "OrderSummary"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "JoinHeaderToLineDetails"
                        },
                        {
                            "name": "OrderLineCount"
                        }
                    ],
                    "script": "source(output(\n\t\tSalesOrderID as integer,\n\t\tRevisionNumber as integer,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp,\n\t\tStatus as integer,\n\t\tOnlineOrderFlag as boolean,\n\t\tSalesOrderNumber as string,\n\t\tPurchaseOrderNumber as string,\n\t\tAccountNumber as string,\n\t\tCustomerID as integer,\n\t\tShipToAddressID as integer,\n\t\tBillToAddressID as integer,\n\t\tShipMethod as string,\n\t\tCreditCardApprovalCode as string,\n\t\tSubTotal as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tTotalDue as decimal(19,4),\n\t\tComment as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 1)) ~> OrderHeader\nsource(output(\n\t\tSalesOrderID as integer,\n\t\tSalesOrderDetailID as integer,\n\t\tOrderQty as integer,\n\t\tProductID as integer,\n\t\tUnitPrice as decimal(19,4),\n\t\tUnitPriceDiscount as decimal(19,4),\n\t\tLineTotal as decimal(38,6),\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 1)) ~> OrderLineDetails\nOrderHeader, OrderLineDetails join(OrderHeader@SalesOrderID == OrderLineDetails@SalesOrderID,\n\tjoinType:'inner',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'both')~> JoinHeaderToLineDetails\nJoinHeaderToLineDetails aggregate(groupBy(SalesOrderNumber),\n\tRecordCount = count(SalesOrderDetailID),\n\tpartitionBy('roundRobin', 4)) ~> OrderLineCount\nOrderLineCount sink(input(\n\t\tSalesOrderNumber as string,\n\t\tRecordCount as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tSalesOrderNumber,\n\t\tRecordCount\n\t),\n\tpartitionBy('roundRobin', 4),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OrderSummary"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/LakeFileOrderHeaderParquet')]",
                "[concat(variables('factoryId'), '/datasets/LakeFileOrderDetailLinesParquet')]",
                "[concat(variables('factoryId'), '/datasets/TableOrderSummary')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WranglingOrderAggregation')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "WranglingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "name": "LakeFileOrderDetailLinesParquet",
                            "script": "",
                            "dataset": {
                                "referenceName": "LakeFileOrderDetailLinesParquet",
                                "type": "DatasetReference"
                            }
                        }
                    ],
                    "sinks": [
                        {
                            "name": "Sink1",
                            "dataset": {
                                "referenceName": "TableOrderSummary",
                                "type": "DatasetReference"
                            },
                            "script": "sink(input(\n\t\tSalesOrderNumber as string,\n\t\tRecordCount as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink1"
                        }
                    ],
                    "script": "section Section1;\r\nshared LakeFileOrderDetailLinesParquet = let\r\n  AdfDoc = Web.Contents(\"https://traininglake01.dfs.core.windows.net/datawarehouse/Raw/OrderDetailLines.parquet?sv=2018-03-28&sig=5R%2BzQI0dTqfGUYi8vVuzKhHq6DBYMX%2FYNyfH4c1BalM%3D&spr=https&se=2020-09-02T12%3A16%3A29Z&srt=sco&ss=bf&sp=rwl\"),\r\n  Parquet = Parquet.Document(AdfDoc)\r\nin\r\n  Parquet;\r\nshared UserQuery = let\r\n  Source = LakeFileOrderDetailLinesParquet\r\nin\r\n  Source;\r\n"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/LakeFileOrderDetailLinesParquet')]",
                "[concat(variables('factoryId'), '/datasets/TableOrderSummary')]"
            ]
        }
    ]
}